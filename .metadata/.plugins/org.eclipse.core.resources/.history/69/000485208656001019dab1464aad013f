@Configuration
@EnableWebSecurity
public class SecurityConfig {

    private CustomLogoutHandler customLogoutHandler;
    private CustomSuccessHandler customSuccessHandler; // ✅ Step 1

    @Autowired
    public void setCustomLogoutHandler(CustomLogoutHandler customLogoutHandler) {
        this.customLogoutHandler = customLogoutHandler;
    }

    @Autowired  // ✅ Step 2
    public void setCustomSuccessHandler(CustomSuccessHandler customSuccessHandler) {
        this.customSuccessHandler = customSuccessHandler;
    }

    @Bean
    public PasswordEncoder passwordEncoder() {
        return PasswordEncoderFactories.createDelegatingPasswordEncoder();
    }

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http.csrf(csrf -> csrf.disable())
            .authorizeHttpRequests(auth -> auth
                .requestMatchers("/admin/**").hasRole("ADMIN")
                .anyRequest().permitAll()
            )
            .formLogin(form -> form
                .loginPage("/login")
                .loginProcessingUrl("/dologin")
                .successHandler(customSuccessHandler) // ✅ Step 3
                .permitAll()
            )
            .logout(logout -> logout
                .logoutUrl("/dologout")
                .logoutSuccessUrl("/login")
                .addLogoutHandler(customLogoutHandler)
            );

        return http.build();
    }
}
