package com.example.service;

import java.io.FileOutputStream;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.example.dao.ServiceFormCrud;
import com.example.model.ServiceForm;

import jakarta.transaction.Transactional;

@Service
public class ServiceFormServiceImpl implements ServiceFormService {

	private ServiceFormCrud serviceFormCrud;
	
	
	
	@Autowired
	public void setServiceFormCrud(ServiceFormCrud serviceFormCrud) {
		this.serviceFormCrud = serviceFormCrud;
	}


	@Transactional(rollbackOn = Exception.class)
	@Override
	public ServiceForm addService(ServiceForm serviceForm, MultipartFile multipartFile) throws Exception {
	    ServiceForm save = null;

	    try {
	        save = serviceFormCrud.save(serviceForm);
	        if (save != null) {
	            // Path to the image directory
	            String folderPath = "src/main/resources/static/myserviceimg";
	            java.io.File folder = new java.io.File(folderPath);

	            // Create the folder if it doesn't exist
	            if (!folder.exists()) {
	                folder.mkdirs(); // make all directories in the path
	            }

	            // Build full file path
	            String filePath = folderPath + java.io.File.separator + multipartFile.getOriginalFilename();
	            byte[] bytes = multipartFile.getBytes();

	            try (FileOutputStream fos = new FileOutputStream(filePath)) {
	                fos.write(bytes);
	            }
	        }

	    } catch (Exception e) {
	        save = null;
	        throw e; // this will roll back the transaction
	    }

	    return save;
	}

